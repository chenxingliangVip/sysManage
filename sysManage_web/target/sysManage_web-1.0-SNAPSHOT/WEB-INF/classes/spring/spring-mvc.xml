<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
	<!-- 配置文件，有override功能，context和mvc都要配置 -->
	<!-- spring MVC容器可以访问spring 容器中的对象，所以可以不配置 fan add -->
	<context:property-placeholder location="
		classpath:application.properties,classpath:database.properties,
		classpath:service.properties,classpath:permission.properties"
		ignore-resource-not-found="true" file-encoding="UTF-8" />

	<!-- springMVC自动扫描的包路径  全部的-->
	<context:component-scan base-package="com.cn.manage">
		<context:exclude-filter type="annotation"  expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 静态资源控制，可以增加cache-period单位是秒,保证5分钟会来访问，可以返回304 -->
	<mvc:resources mapping="/resources/**" location="WEB-INF/resources/" cache-period="300" />
	<mvc:resources mapping="/dist/**" location="dist/" cache-period="300" />
	<mvc:resources mapping="/static/config/**" location="dist/static/config/" cache-period="300" />
	<mvc:resources mapping="/static/UEditor/**" location="dist/static/UEditor/" cache-period="300" />
	<!-- aop 自动创建代理织入切面 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<bean id="jspViewResolver"
		  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 文件上传处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- 数据源 -->
	<!-- mysql -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />

		<property name="initialSize" value="5" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="1000" />
	</bean>
	<!-- 引入mybatis配置文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
        <property name="mapperLocations" value="classpath*:com/cn/manage/dao/*.xml" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
	</bean>

	<!-- mapper接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<property name="basePackage" value="com.cn.drug.dao"></property><!-- 指向dao的接口包 -->
	</bean>

	<context:annotation-config />
	<!-- 连接事务的注解配置 --><!-- mybatis的datasource -->
	<tx:annotation-driven/>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" propagation="REQUIRED" read-only="true" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	<!-- Spring aop事务管理 -->
	<aop:config expose-proxy="true" proxy-target-class="true">
		<aop:advisor advice-ref="transactionAdvice" pointcut="execution(* com.cn.manage.service.*.*(..))"/>
	</aop:config>

	<!--启用缓存注解-->
	<cache:annotation-driven cache-manager="cacheManager"/>
	<bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:/spring/ehcache.xml"/>
	</bean>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="cacheManagerFactory"/>
	</bean>
</beans>
